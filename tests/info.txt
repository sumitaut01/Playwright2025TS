npm install -g typescript  //typescript compiler global installation
npm install -D @playwright/test@latest

//node package executor
npx playwright show-report

1. Kill the existing process

If a previous report window is still running in the background, kill it.
On Windows PowerShell:
netstat -ano | findstr :9323
(note the PID), then:
taskkill /PID <pid> /F


On Linux/Mac:
lsof -i :9323
kill -9 <pid>

npx playwright show-report --port=9333
npx playwright test file1.spec.ts --project=chromium


threads number based on your cpu--

npx playwright test test1.spec.ts test2.spec.ts
npx playwright test test1.spec.ts 
npx playwright test testsubdirectory

npx playwright test test
npx playwright codegen demo.playwright.dev/todomvc
npx playwright test --ui
npx playwright test --project webkit --project firefox
npx playwright test --last-failed
npx playwright test --debug
npx playwright show-report
npx playwright test --trace on

npx playwright show-report name-of-my-extracted-playwright-report

npx playwright test -g  "testmethodname"

npx playwright test project=chromium

npx playwright test --headed

npx playwright test --grep "@smoke"
npx playwright test --ui  //superb

expects unique locator.. unlike selenium wont selct first.

#10. Playwright Locator - getByRole | ARIA Role | Aria Attribute | Accessible Name | Basic Usage |

tsc filename.ts
ts-node D:\SeleniumFrameWorks\GitHubSumitraut01\Playright2025TS\tests\tspractice\02typesafety.ts


Lint your tests
We recommend TypeScript and linting with ESLint for your tests to catch errors early. Use @typescript-eslint/no-floating-promises ESLint rule to make sure there are no missing awaits before the asynchronous calls to the Playwright API. On your CI you can run tsc --noEmit to ensure that functions are called with the right signature.